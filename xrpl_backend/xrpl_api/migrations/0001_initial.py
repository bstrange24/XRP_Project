# Generated by Django 5.1.6 on 2025-03-02 19:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NFTAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ledger_entry_type', models.CharField(max_length=50)),
                ('ledger_index', models.CharField(max_length=64)),
                ('final_fields', models.JSONField(blank=True, null=True)),
                ('previous_fields', models.JSONField(blank=True, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'xrpl_nft_mint_affected_nodes_data',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ledger_entry_type', models.CharField(max_length=50)),
                ('ledger_index', models.CharField(max_length=64)),
                ('node_type', models.CharField(blank=True, max_length=20, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'xrpl_payment_transaction_affected_node_data',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.DateTimeField()),
                ('ctid', models.CharField(max_length=20)),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField()),
                ('transaction_index', models.IntegerField()),
                ('transaction_result', models.CharField(max_length=20)),
                ('delivered_amount', models.CharField(max_length=20)),
                ('validated', models.BooleanField()),
                ('transaction_hash', models.CharField(max_length=64, unique=True)),
                ('sender', models.CharField(max_length=35)),
                ('receiver', models.CharField(max_length=35)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('fee_drops', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'xrpl_payment_transaction_data',
            },
        ),
        migrations.CreateModel(
            name='ServerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build_version', models.CharField(max_length=10)),
                ('complete_ledgers', models.CharField(max_length=20)),
                ('hostid', models.CharField(max_length=10)),
                ('initial_sync_duration_us', models.BigIntegerField()),
                ('io_latency_ms', models.IntegerField()),
                ('jq_trans_overflow', models.CharField(max_length=10)),
                ('load_factor', models.IntegerField()),
                ('network_id', models.IntegerField()),
                ('peer_disconnects', models.CharField(max_length=10)),
                ('peer_disconnects_resources', models.CharField(max_length=10)),
                ('peers', models.IntegerField()),
                ('pubkey_node', models.CharField(max_length=35)),
                ('server_state', models.CharField(max_length=20)),
                ('server_state_duration_us', models.BigIntegerField()),
                ('time', models.CharField(max_length=30)),
                ('uptime', models.BigIntegerField()),
                ('validation_quorum', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Server Info',
                'verbose_name_plural': 'Server Info Records',
                'db_table': 'xrpl_server_info',
            },
        ),
        migrations.CreateModel(
            name='TransactionAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_type', models.CharField(max_length=20)),
                ('ledger_entry_type', models.CharField(max_length=20)),
                ('ledger_index', models.CharField(max_length=64)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'xrpl_transaction_history_affected_node_data',
            },
        ),
        migrations.CreateModel(
            name='TransactionHistoryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.DateTimeField()),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField()),
                ('validated', models.BooleanField()),
            ],
            options={
                'db_table': 'xrpl_transaction_history_data',
            },
        ),
        migrations.CreateModel(
            name='XrplAccountData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=100, unique=True)),
                ('balance', models.DecimalField(decimal_places=8, max_digits=20)),
                ('flags', models.IntegerField()),
                ('ledger_entry_type', models.CharField(max_length=100)),
                ('owner_count', models.IntegerField()),
                ('previous_txn_id', models.CharField(max_length=255)),
                ('previous_txn_lgr_seq', models.IntegerField()),
                ('sequence', models.IntegerField()),
                ('index', models.CharField(max_length=255)),
                ('allow_trustline_clawback', models.BooleanField(default=False)),
                ('default_ripple', models.BooleanField(default=False)),
                ('deposit_auth', models.BooleanField(default=False)),
                ('disable_master_key', models.BooleanField(default=False)),
                ('disallow_incoming_check', models.BooleanField(default=False)),
                ('global_freeze', models.BooleanField(default=False)),
                ('no_freeze', models.BooleanField(default=False)),
                ('password_spent', models.BooleanField(default=False)),
                ('require_authorization', models.BooleanField(default=False)),
                ('require_destination_tag', models.BooleanField(default=False)),
                ('ledger_hash', models.CharField(max_length=255)),
                ('ledger_index', models.IntegerField()),
                ('validated', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'xrpl_account_data',
            },
        ),
        migrations.CreateModel(
            name='AccountConfigurationTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.CharField(max_length=25)),
                ('ctid', models.CharField(max_length=16)),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField()),
                ('validated', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('asf_account_txn_id', models.BooleanField(blank=True, null=True)),
                ('asf_allow_trustline_clawback', models.BooleanField(blank=True, null=True)),
                ('asf_authorized_nftoken_minter', models.BooleanField(blank=True, null=True)),
                ('asf_default_ripple', models.BooleanField(blank=True, null=True)),
                ('asf_deposit_auth', models.BooleanField(blank=True, null=True)),
                ('asf_disable_master', models.BooleanField(blank=True, null=True)),
                ('asf_disable_incoming_check', models.BooleanField(blank=True, null=True)),
                ('asf_disable_incoming_nftoken_offer', models.BooleanField(blank=True, null=True)),
                ('asf_disable_incoming_paychan', models.BooleanField(blank=True, null=True)),
                ('asf_disable_incoming_trustline', models.BooleanField(blank=True, null=True)),
                ('asf_disallow_xrp', models.BooleanField(blank=True, null=True)),
                ('asf_global_freeze', models.BooleanField(blank=True, null=True)),
                ('asf_no_freeze', models.BooleanField(blank=True, null=True)),
                ('asf_require_auth', models.BooleanField(blank=True, null=True)),
                ('asf_require_dest', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Account Configuration Transaction',
                'verbose_name_plural': 'Account Configuration Transactions',
                'db_table': 'xrpl_account_configuration_data',
                'indexes': [models.Index(fields=['hash'], name='tx_hash_idx'), models.Index(fields=['ledger_index'], name='tx_ledger_idx')],
            },
        ),
        migrations.CreateModel(
            name='AccountConfigurationTransactionMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_index', models.IntegerField()),
                ('transaction_result', models.CharField(max_length=20)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='xrpl_api.accountconfigurationtransaction')),
            ],
            options={
                'db_table': 'xrpl_account_configuration_meta_data',
            },
        ),
        migrations.CreateModel(
            name='AffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ledger_entry_type', models.CharField(max_length=20)),
                ('ledger_index', models.CharField(max_length=64)),
                ('final_fields', models.JSONField()),
                ('previous_fields', models.JSONField(blank=True, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.BigIntegerField(blank=True, null=True)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.accountconfigurationtransactionmeta')),
            ],
            options={
                'db_table': 'xrpl_account_configuration_affected_nodes_data',
            },
        ),
        migrations.CreateModel(
            name='EscrowTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.DateTimeField()),
                ('ctid', models.CharField(max_length=16)),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.PositiveIntegerField()),
                ('validated', models.BooleanField(default=True)),
                ('transaction_result', models.CharField(max_length=20)),
                ('transaction_index', models.PositiveIntegerField()),
                ('account', models.CharField(max_length=35)),
                ('amount', models.CharField(max_length=20)),
                ('cancel_after', models.PositiveIntegerField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, max_length=72, null=True)),
                ('fulfillment', models.CharField(blank=True, max_length=72, null=True)),
                ('destination', models.CharField(max_length=35)),
                ('fee', models.CharField(max_length=10)),
                ('finish_after', models.PositiveIntegerField(blank=True, null=True)),
                ('flags', models.PositiveIntegerField(default=0)),
                ('last_ledger_sequence', models.PositiveIntegerField()),
                ('sequence', models.PositiveIntegerField()),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=140)),
                ('date', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Escrow Transaction',
                'verbose_name_plural': 'Escrow Transactions',
                'db_table': 'xrpl_escrow_transaction_data',
                'indexes': [models.Index(fields=['account'], name='idx_escrow_account'), models.Index(fields=['destination'], name='idx_escrow_destination'), models.Index(fields=['close_time_iso'], name='idx_escrow_close_time'), models.Index(fields=['condition'], name='idx_escrow_condition'), models.Index(fields=['ledger_index'], name='idx_escrow_ledger_index'), models.Index(fields=['account', 'close_time_iso'], name='idx_escrow_account_time')],
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_hash', models.CharField(max_length=64)),
                ('close_flags', models.IntegerField(default=0)),
                ('close_time', models.BigIntegerField()),
                ('close_time_human', models.CharField(max_length=30)),
                ('close_time_iso', models.CharField(max_length=25)),
                ('close_time_resolution', models.IntegerField()),
                ('closed', models.BooleanField(default=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField(unique=True)),
                ('parent_close_time', models.BigIntegerField()),
                ('parent_hash', models.CharField(max_length=64)),
                ('total_coins', models.CharField(max_length=20)),
                ('transaction_hash', models.CharField(max_length=64)),
                ('validated', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Ledger',
                'verbose_name_plural': 'Ledgers',
                'db_table': 'xrpl_ledger_data',
                'indexes': [models.Index(fields=['ledger_index'], name='ledger_index_idx'), models.Index(fields=['ledger_hash'], name='ledger_hash_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTBurnTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.DateTimeField()),
                ('ctid', models.CharField(max_length=16)),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField()),
                ('validated', models.BooleanField()),
            ],
            options={
                'db_table': 'xrpl_nft_burn_data',
                'indexes': [models.Index(fields=['hash'], name='xrpl_nft_bu_hash_881e5c_idx'), models.Index(fields=['ledger_index'], name='xrpl_nft_bu_ledger__ec5c97_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTBuyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=35)),
                ('ledger_current_index', models.BigIntegerField()),
                ('validated', models.BooleanField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'xrpl_nft_buy_transaction_data',
                'indexes': [models.Index(fields=['account'], name='xrpl_nft_bu_account_86aaae_idx'), models.Index(fields=['ledger_current_index'], name='xrpl_nft_bu_ledger__39aea2_idx')],
                'unique_together': {('account', 'ledger_current_index')},
            },
        ),
        migrations.CreateModel(
            name='NFToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nftoken_id', models.CharField(max_length=64)),
                ('final_nftoken', models.JSONField(blank=True, null=True)),
                ('previous_nftoken', models.JSONField(blank=True, null=True)),
                ('affected_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nftokens', to='xrpl_api.nftaffectednode')),
            ],
            options={
                'db_table': 'xrpl_nft_mint_tokens_data',
            },
        ),
        migrations.CreateModel(
            name='NFTSellTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.DateTimeField()),
                ('ctid', models.CharField(max_length=16)),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField()),
                ('validated', models.BooleanField()),
            ],
            options={
                'db_table': 'xrpl_nft_sell_data',
                'indexes': [models.Index(fields=['hash'], name='xrpl_nft_se_hash_e328e5_idx'), models.Index(fields=['ledger_index'], name='xrpl_nft_se_ledger__ff2f9f_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_time_iso', models.DateTimeField()),
                ('ctid', models.CharField(max_length=32)),
                ('hash', models.CharField(max_length=64, unique=True)),
                ('ledger_hash', models.CharField(max_length=64)),
                ('ledger_index', models.BigIntegerField()),
                ('transaction_index', models.IntegerField(blank=True, null=True)),
                ('transaction_result', models.CharField(blank=True, max_length=20, null=True)),
                ('nftoken_id', models.CharField(blank=True, max_length=64, null=True)),
                ('account', models.CharField(max_length=35)),
                ('fee', models.CharField(max_length=20)),
                ('flags', models.IntegerField()),
                ('last_ledger_sequence', models.BigIntegerField()),
                ('nftoken_taxon', models.IntegerField()),
                ('sequence', models.BigIntegerField()),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=128)),
                ('date', models.BigIntegerField()),
                ('validated', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Mint NFT',
                'verbose_name_plural': 'Mint NFT',
                'db_table': 'xrpl_nft_mint_data',
                'indexes': [models.Index(fields=['transaction_type'], name='transaction_type_idx')],
            },
        ),
        migrations.AddField(
            model_name='nftaffectednode',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.nfttransaction'),
        ),
        migrations.CreateModel(
            name='OfferCancelResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctid', models.CharField(max_length=50, unique=True)),
                ('hash', models.CharField(max_length=100)),
                ('ledger_hash', models.CharField(max_length=100)),
                ('ledger_index', models.IntegerField()),
                ('close_time_iso', models.DateTimeField()),
                ('validated', models.BooleanField()),
                ('meta', models.JSONField()),
                ('tx_json', models.JSONField()),
            ],
            options={
                'verbose_name': 'Account Offer Transaction',
                'verbose_name_plural': 'Account Offer Transactions',
                'db_table': 'xrpl_offer_cancel_data',
                'indexes': [models.Index(fields=['hash'], name='tx_oc_hash_idx'), models.Index(fields=['ledger_index'], name='tx_oc_ledger_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionFinalFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, max_length=35, null=True)),
                ('account_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('balance', models.CharField(blank=True, max_length=20, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('owner_count', models.IntegerField(blank=True, null=True)),
                ('sequence', models.BigIntegerField(blank=True, null=True)),
                ('affected_node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='final_fields', to='xrpl_api.paymenttransactionaffectednode')),
            ],
            options={
                'db_table': 'xrpl_payment_transaction_final_fields_data',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_index', models.IntegerField()),
                ('transaction_result', models.CharField(max_length=20)),
                ('delivered_amount', models.CharField(max_length=20)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='xrpl_api.paymenttransactiondata')),
            ],
            options={
                'db_table': 'xrpl_payment_transaction_meta_data',
            },
        ),
        migrations.AddField(
            model_name='paymenttransactionaffectednode',
            name='meta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.paymenttransactionmeta'),
        ),
        migrations.CreateModel(
            name='PaymentTransactionPreviousFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('balance', models.CharField(max_length=20)),
                ('sequence', models.BigIntegerField(blank=True, null=True)),
                ('affected_node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='previous_fields', to='xrpl_api.paymenttransactionaffectednode')),
            ],
            options={
                'db_table': 'xrpl_payment_transaction_previous_fields_data',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionTxJson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=35)),
                ('deliver_max', models.CharField(blank=True, max_length=20, null=True)),
                ('destination', models.CharField(max_length=35)),
                ('fee', models.CharField(blank=True, max_length=20, null=True)),
                ('flags', models.IntegerField()),
                ('last_ledger_sequence', models.BigIntegerField()),
                ('sequence', models.BigIntegerField()),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=128)),
                ('date', models.BigIntegerField()),
                ('ledger_index', models.BigIntegerField()),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tx_json', to='xrpl_api.paymenttransactiondata')),
            ],
            options={
                'db_table': 'xrpl_payment_transaction_tx_json_data',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.CharField(max_length=5)),
                ('protocol', models.JSONField()),
                ('server_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='xrpl_api.serverinfo')),
            ],
            options={
                'db_table': 'xrpl_server_port',
            },
        ),
        migrations.CreateModel(
            name='LastClose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('converge_time_s', models.FloatField()),
                ('proposers', models.IntegerField()),
                ('server_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='last_close', to='xrpl_api.serverinfo')),
            ],
            options={
                'db_table': 'xrpl_server_last_close',
            },
        ),
        migrations.CreateModel(
            name='StateAccountingEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('connected', 'Connected'), ('disconnected', 'Disconnected'), ('full', 'Full'), ('syncing', 'Syncing'), ('tracking', 'Tracking')], max_length=20)),
                ('duration_us', models.BigIntegerField()),
                ('transitions', models.IntegerField()),
                ('server_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_accounting', to='xrpl_api.serverinfo')),
            ],
            options={
                'db_table': 'xrpl_server_state_accounting_entry',
            },
        ),
        migrations.CreateModel(
            name='TransactionFinalFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, max_length=35, null=True)),
                ('balance', models.CharField(blank=True, max_length=20, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('owner_count', models.IntegerField(blank=True, null=True)),
                ('sequence', models.BigIntegerField(blank=True, null=True)),
                ('ticket_count', models.IntegerField(blank=True, null=True)),
                ('index_next', models.CharField(blank=True, max_length=20, null=True)),
                ('index_previous', models.CharField(blank=True, max_length=20, null=True)),
                ('owner', models.CharField(blank=True, max_length=35, null=True)),
                ('root_index', models.CharField(blank=True, max_length=64, null=True)),
                ('owner_node', models.CharField(blank=True, max_length=20, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.BigIntegerField(blank=True, null=True)),
                ('ticket_sequence', models.BigIntegerField(blank=True, null=True)),
                ('affected_node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='final_fields', to='xrpl_api.transactionaffectednode')),
            ],
            options={
                'db_table': 'xrpl_transaction_history_final_fields_data',
            },
        ),
        migrations.CreateModel(
            name='TransactionJson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=35)),
                ('deliver_max', models.CharField(blank=True, max_length=20, null=True)),
                ('destination', models.CharField(max_length=35)),
                ('fee', models.CharField(max_length=10)),
                ('flags', models.IntegerField()),
                ('last_ledger_sequence', models.BigIntegerField()),
                ('sequence', models.BigIntegerField()),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=144)),
                ('date', models.BigIntegerField()),
                ('ledger_index', models.BigIntegerField()),
                ('ticket_sequence', models.BigIntegerField(blank=True, null=True)),
                ('ledger_transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tx_json', to='xrpl_api.transactionhistorydata')),
            ],
            options={
                'db_table': 'xrpl_transaction_history_json_data',
            },
        ),
        migrations.CreateModel(
            name='TransactionMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_index', models.IntegerField()),
                ('transaction_result', models.CharField(max_length=20)),
                ('delivered_amount', models.CharField(max_length=20)),
                ('ledger_transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='xrpl_api.transactionhistorydata')),
            ],
            options={
                'db_table': 'xrpl_transaction_history_meta_data',
            },
        ),
        migrations.AddField(
            model_name='transactionaffectednode',
            name='meta_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.transactionmetadata'),
        ),
        migrations.CreateModel(
            name='TransactionNewFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, max_length=35, null=True)),
                ('balance', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.BigIntegerField(blank=True, null=True)),
                ('affected_node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='new_fields', to='xrpl_api.transactionaffectednode')),
            ],
            options={
                'db_table': 'xrpl_transaction_history_new_fields_data',
            },
        ),
        migrations.CreateModel(
            name='TransactionPreviousFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.CharField(blank=True, max_length=20, null=True)),
                ('owner_count', models.IntegerField(blank=True, null=True)),
                ('sequence', models.BigIntegerField(blank=True, null=True)),
                ('ticket_count', models.IntegerField(blank=True, null=True)),
                ('affected_node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='previous_fields', to='xrpl_api.transactionaffectednode')),
            ],
            options={
                'db_table': 'xrpl_transaction_history_previous_fields_data',
            },
        ),
        migrations.CreateModel(
            name='TxJson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=35)),
                ('fee', models.CharField(max_length=10)),
                ('flags', models.IntegerField()),
                ('last_ledger_sequence', models.BigIntegerField()),
                ('sequence', models.BigIntegerField()),
                ('set_flag', models.IntegerField(blank=True, null=True)),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=128)),
                ('date', models.BigIntegerField()),
                ('ledger_index', models.BigIntegerField()),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tx_json', to='xrpl_api.accountconfigurationtransaction')),
            ],
            options={
                'db_table': 'xrpl_account_configuration_tx_json_data',
            },
        ),
        migrations.CreateModel(
            name='ValidatedLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('base_fee_xrp', models.FloatField()),
                ('hash', models.CharField(max_length=64)),
                ('reserve_base_xrp', models.IntegerField()),
                ('reserve_inc_xrp', models.FloatField()),
                ('seq', models.BigIntegerField()),
                ('server_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='validated_ledger', to='xrpl_api.serverinfo')),
            ],
            options={
                'db_table': 'xrpl_server_validated_ledger',
            },
        ),
        migrations.CreateModel(
            name='EscrowTransactionAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ledger_entry_type', models.CharField(max_length=20)),
                ('ledger_index', models.CharField(max_length=64)),
                ('account', models.CharField(blank=True, max_length=35, null=True)),
                ('amount', models.CharField(blank=True, max_length=20, null=True)),
                ('balance', models.CharField(blank=True, max_length=20, null=True)),
                ('flags', models.PositiveIntegerField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=35, null=True)),
                ('owner_count', models.PositiveIntegerField(blank=True, null=True)),
                ('sequence', models.PositiveIntegerField(blank=True, null=True)),
                ('root_index', models.CharField(blank=True, max_length=64, null=True)),
                ('condition', models.CharField(blank=True, max_length=72, null=True)),
                ('destination', models.CharField(blank=True, max_length=35, null=True)),
                ('cancel_after', models.PositiveIntegerField(blank=True, null=True)),
                ('finish_after', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_balance', models.CharField(blank=True, max_length=20, null=True)),
                ('previous_owner_count', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_sequence', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.PositiveIntegerField(blank=True, null=True)),
                ('node_type', models.CharField(max_length=20)),
                ('escrow_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.escrowtransaction')),
            ],
            options={
                'verbose_name': 'Affected Node',
                'verbose_name_plural': 'Affected Nodes',
                'db_table': 'xrpl_escrow_transaction_affected_nodes',
                'indexes': [models.Index(fields=['escrow_transaction'], name='idx_affected_tx'), models.Index(fields=['account'], name='idx_affected_account'), models.Index(fields=['node_type'], name='idx_affected_node_type'), models.Index(fields=['ledger_index'], name='idx_affected_ledger_index')],
            },
        ),
        migrations.CreateModel(
            name='NFTBurnAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_type', models.CharField(max_length=20)),
                ('ledger_entry_type', models.CharField(max_length=20)),
                ('ledger_index', models.CharField(max_length=64)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('nftoken_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.BigIntegerField(blank=True, null=True)),
                ('nftokens_final', models.JSONField(blank=True, null=True)),
                ('nftokens_previous', models.JSONField(blank=True, null=True)),
                ('next_page_min', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_page_min', models.CharField(blank=True, max_length=64, null=True)),
                ('amount', models.CharField(blank=True, max_length=20, null=True)),
                ('owner', models.CharField(blank=True, max_length=35, null=True)),
                ('nftoken_offer_node', models.CharField(blank=True, max_length=1, null=True)),
                ('owner_node', models.CharField(blank=True, max_length=1, null=True)),
                ('root_index', models.CharField(blank=True, max_length=64, null=True)),
                ('account', models.CharField(blank=True, max_length=35, null=True)),
                ('balance', models.CharField(blank=True, max_length=20, null=True)),
                ('burned_nftokens', models.IntegerField(blank=True, null=True)),
                ('first_nftoken_sequence', models.BigIntegerField(blank=True, null=True)),
                ('minted_nftokens', models.IntegerField(blank=True, null=True)),
                ('owner_count', models.IntegerField(blank=True, null=True)),
                ('sequence', models.BigIntegerField(blank=True, null=True)),
                ('previous_fields', models.JSONField(blank=True, null=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.nftburntransaction')),
            ],
            options={
                'db_table': 'xrpl_nft_burn_affected_nodes_data',
                'indexes': [models.Index(fields=['transaction'], name='xrpl_nft_bu_transac_0015ac_idx'), models.Index(fields=['ledger_index'], name='xrpl_nft_bu_ledger__e54317_idx'), models.Index(fields=['nftoken_id'], name='xrpl_nft_bu_nftoken_1cdfd8_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTBurnTransactionJson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=35)),
                ('fee', models.CharField(max_length=10)),
                ('flags', models.IntegerField(blank=True, default=None, null=True)),
                ('last_ledger_sequence', models.BigIntegerField()),
                ('nftoken_sell_offer', models.CharField(blank=True, max_length=64, null=True)),
                ('sequence', models.BigIntegerField()),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=128)),
                ('date', models.BigIntegerField()),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tx_json', to='xrpl_api.nftburntransaction')),
            ],
            options={
                'db_table': 'xrpl_nft_burn_tx_json_data',
                'indexes': [models.Index(fields=['account'], name='xrpl_nft_bu_account_3e38d3_idx'), models.Index(fields=['transaction'], name='xrpl_nft_bu_transac_e061de_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTBuyTransactionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flags', models.IntegerField()),
                ('issuer', models.CharField(max_length=35)),
                ('nftoken_id', models.CharField(max_length=64, unique=True)),
                ('nftoken_taxon', models.IntegerField()),
                ('nft_serial', models.BigIntegerField()),
                ('transfer_fee', models.IntegerField(blank=True, null=True)),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nfts', to='xrpl_api.nftbuytransaction')),
            ],
            options={
                'db_table': 'xrpl_nft_buy_data',
                'indexes': [models.Index(fields=['snapshot'], name='xrpl_nft_bu_snapsho_ce6c9c_idx'), models.Index(fields=['nftoken_id'], name='xrpl_nft_bu_nftoken_61dcf0_idx'), models.Index(fields=['issuer'], name='xrpl_nft_bu_issuer_b3a348_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTSellAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_type', models.CharField(max_length=20)),
                ('ledger_entry_type', models.CharField(max_length=20)),
                ('ledger_index', models.CharField(max_length=64)),
                ('new_fields', models.JSONField(blank=True, null=True)),
                ('final_fields', models.JSONField(blank=True, null=True)),
                ('previous_fields', models.JSONField(blank=True, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=64, null=True)),
                ('previous_txn_lgr_seq', models.BigIntegerField(blank=True, null=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.nftselltransaction')),
            ],
            options={
                'db_table': 'xrpl_nft_sell_affected_nodes_data',
                'indexes': [models.Index(fields=['transaction'], name='xrpl_nft_se_transac_0424d3_idx'), models.Index(fields=['ledger_index'], name='xrpl_nft_se_ledger__489374_idx')],
            },
        ),
        migrations.CreateModel(
            name='NFTSellTransactionJson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=35)),
                ('amount', models.CharField(max_length=20)),
                ('fee', models.CharField(max_length=10)),
                ('flags', models.IntegerField(blank=True, default=None, null=True)),
                ('last_ledger_sequence', models.BigIntegerField()),
                ('nftoken_id', models.CharField(max_length=64)),
                ('sequence', models.BigIntegerField()),
                ('signing_pub_key', models.CharField(max_length=66)),
                ('transaction_type', models.CharField(max_length=20)),
                ('txn_signature', models.CharField(max_length=128)),
                ('date', models.BigIntegerField()),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tx_json', to='xrpl_api.nftselltransaction')),
            ],
            options={
                'db_table': 'xrpl_nft_sell_tx_json_data',
                'indexes': [models.Index(fields=['account'], name='xrpl_nft_se_account_9b8df7_idx'), models.Index(fields=['transaction'], name='xrpl_nft_se_transac_263df7_idx')],
            },
        ),
        migrations.CreateModel(
            name='OfferCancelAffectedNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_type', models.CharField(choices=[('DeletedNode', 'DeletedNode'), ('ModifiedNode', 'ModifiedNode')], max_length=20)),
                ('ledger_entry_type', models.CharField(max_length=50)),
                ('ledger_index', models.CharField(max_length=100)),
                ('final_fields', models.JSONField(blank=True, null=True)),
                ('previous_fields', models.JSONField(blank=True, null=True)),
                ('previous_txn_id', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_txn_lgr_seq', models.IntegerField(blank=True, null=True)),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affected_nodes', to='xrpl_api.offercancelresponse')),
            ],
            options={
                'verbose_name': 'Account Offer Affected Node Transaction',
                'verbose_name_plural': 'Account Offer Affected Node Transactions',
                'db_table': 'xrpl_offer_cancel_affected_node_data',
                'indexes': [models.Index(fields=['ledger_index'], name='tx_oca_ledger_idx')],
            },
        ),
    ]
